services:
  sec_app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        IDS_USER_PASSWORD: ${IDS_USER_PASSWORD}
        CONTAINER_SSH_PORT: ${CONTAINER_SSH_PORT}
    image: secure_container_refactored
    container_name: sec_app_container
    ports:
      - "${HOST_SSH_PORT}:${CONTAINER_SSH_PORT}" # Maps host port to container port
    volumes:
      - ~/Documents/ids_app_data:/var/log/ids_app:rw # Ensures /var/log/ids_app is writable
    restart: unless-stopped
    env_file:
      - .env
    environment:
      IDS_USER_PASSWORD: ${IDS_USER_PASSWORD}
      LOG_FILE_PATH: /var/log/ids_app/ids.log
      SSH_LOG_PATH: /var/log/ids_app/ids.log
      BLACKLIST_FILE: /var/log/ids_app/blacklist.txt
      FAILED_ATTEMPTS_THRESHOLD: ${FAILED_ATTEMPTS_THRESHOLD}
      SSHD_CONFIG_PATH: /etc/ssh/sshd_config
    privileged: false
    command: |
      sh -c "chown -R 1001:1001 /var/log/ids_app && chmod -R 775 /var/log/ids_app && supervisord -c /etc/supervisord.conf"
    cap_add:
      - NET_ADMIN
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          cpus: "0.5" # Limited to half a CPU
          memory: "512M" # Limited to 512MB of RAM
        reservations:
          cpus: "0.25" # Reserves a quarter of a CPU
          memory: "256M" # Reserves 256MB of RAM
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp # Uses tmpfs for /tmp to prevent writing to disk
      - /var/run/sshd # Mounts /var/run/sshd as tmpfs to allow sshd to create runtime files
